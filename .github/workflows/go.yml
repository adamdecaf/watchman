name: Go

on:
  workflow_call:
  workflow_dispatch:

jobs:
  linters:
    name: Run Go Linters
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Setup Linux Dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-dev and xorg-dev

    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version: stable
      id: go

    - name: Run Linters
      run: make check
      env:
        SKIP_TESTS: yes

  short:
    name: Short tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Setup Linux Dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-dev and xorg-dev

    - name: Setup Windows Dependencies
      if: runner.os == 'Windows'
      run: |
        choco install -y make mingw

    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version: stable
      id: go

    - name: Run Tests
      run: make check
      env:
        GOTEST_FLAGS: "-short"
        SKIP_LINTERS: yes

  sources-long:
    name: Long testing pkg/sources/
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version: stable
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Short Tests
      run: go test ./pkg/sources... -count 1 -v

  docker:
    name: Docker build
    runs-on: [ ubuntu-latest ]
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version: stable
      id: go

    - name: Setup Node / NPM
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Docker Build
      run: make docker-hub

  openshift:
    name: Openshift Docker Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version: stable
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Build Image
      run: make docker-openshift

  static:
    name: Static Docker Build
    runs-on: ${{ matrix.os }}
    needs: [docker]
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version: stable
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build Image
      run: make docker-static
